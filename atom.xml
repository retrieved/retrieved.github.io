<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Strive not to be a success]]></title>
  <link href="http://retrieved.github.io/atom.xml" rel="self"/>
  <link href="http://retrieved.github.io/"/>
  <updated>2014-07-22T02:51:59+08:00</updated>
  <id>http://retrieved.github.io/</id>
  <author>
    <name><![CDATA[as_ary]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Menganalisa Masalah dan Membuat Algoritma]]></title>
    <link href="http://retrieved.github.io/blog/2014/07/22/menganalisa-masalah-dan-membuat-algoritma/"/>
    <updated>2014-07-22T02:03:57+08:00</updated>
    <id>http://retrieved.github.io/blog/2014/07/22/menganalisa-masalah-dan-membuat-algoritma</id>
    <content type="html"><![CDATA[<p>Proses pertama, menganalisa terhadap masalah dan membuat algoritma memang tidak bisa begitu saja diwujudkan, pengalaman, pengetahuan, kreativitas, imajinasi dan keahlian merupakan faktor-faktor yang menentukan sekali keberhasilan langkah ini. Di dalam analisa masalah, diperlukan tindakan untuk mengindentifikasi informasi yang menjadi keluaran pemecahan masalah dan data-data yang menjadi masukan.
komputer tidak akan berarti apa-apa tanpa adanya langkah detail menyusun prosedur. maksud langkah detail menyusun prosedur  yang ditujukan untuk komputer guna menyelesaikan suatu masalah inilah yang disebut <code>algoritma</code>. namun algoritma ini tidak bergantung dalam bahasa pemograman, karena algoritma bersifat bebas dengan bahasa pemograman.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Memahami Istilah Program]]></title>
    <link href="http://retrieved.github.io/blog/2014/07/22/memahami-istilah-program/"/>
    <updated>2014-07-22T01:35:35+08:00</updated>
    <id>http://retrieved.github.io/blog/2014/07/22/memahami-istilah-program</id>
    <content type="html"><![CDATA[<p>Dalam dunia komputer, <code>Program</code> berarti &ldquo;kumpulan code / pertintah yang berupa baris baris code yang ditujukan kepada komputer untuk melakukan suatu tindakan sesuai yang dikehendaki si penulis program tersebut&rdquo;.
Untuk membuat program yang ditulis oleh seseorang atau bisa disebut dengan <code>source code</code> agar ini bisa dijalankan oleh komputer, diperlukan suatu program lain yang berfungsi untuk menerjemahkan program tersebut kedalam bentuk yang dimengerti oleh komputer. pada bahasa pemograman <code>Java</code> program ini bisa ditulis dengan <code>vi</code> atau <code>notepad</code> atau menggunakan tools seperti <code>eclipse</code>, <code>netbeans</code>, <code>IntellijIDEA</code>, <code>Borland JBuilder</code>,  selanjutnya <code>source code</code> perlu diterjemahkan ke kode yang dinamakan <code>bytecode</code> kode hasil terjemah inilah yang akan dijalankan komputer melalui perantara suatu program khusus yang dikemas dalam <code>Java Runtime Environment</code> (JRE).</p>

<blockquote>
<li>Aktivitas dalam membuat program biasa dinamakan `pemograman` (programing)</li>
<li>Orang yang membuat program disebut pemogram (`programmer`)
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keunggulan Java]]></title>
    <link href="http://retrieved.github.io/blog/2014/07/22/keunggulan-java/"/>
    <updated>2014-07-22T01:22:07+08:00</updated>
    <id>http://retrieved.github.io/blog/2014/07/22/keunggulan-java</id>
    <content type="html"><![CDATA[<p>Java memiliki beberapa keunggulan yang tidak dimiliki oleh bahasa lain. Berdasarkan dokumen resmi dari Sun Microsystem, Java memiliki karakteristik berikut :</p>

<p><code>Sederhana</code> Bahasa pemograman Java menggunakan sintaks mirip dengan C++ namun sintaks pada java telah banyak diperbaiki terutama menghilangkan penggunaan pointer yang rumit dan multiple inheritance. Java juga menggunakan automatic memory allocation dan memory garbage collection.</p>

<p><code>Beoreintasi objek</code> Java menggunakan pemograman beroreitasi objeck yang membuat program dapat dibuat secara  modular dan dapat dipergunakan kembali. Pemograman beoreintasi object memodelkan dunia nyata kedalam object dan melakukan interaksi antar object – object tersebut.
Dapat didistribusikan dengan mudah
Java dibuat untuk membuat aplikasi terdistribusi secara mudah dengan adanya libraries networking yang terintegrasi.</p>

<p><code>Interpreter</code> Program java dijalankan menggunakan interpreter yaitu Java virtual Machine (JVM). Hal ini menyebabkan kode sumber Java yang telah dikompilasi menjadi bytecode Java dapat dijalankan pada platform yang berbeda beda.</p>

<p><code>Robust</code> Java mempunyai reliabilitas yang tinggi. Kompilator pada java mempunyai kemampuan mendeteksi error secara lebih teliti dibandingkan bahasa pemograman lain. Java mempunyai Runtime – Exception handling untuk membantu mengatasi eror pada program.</p>

<p><code>Aman</code> Sebagai bahasa pemograman untuk aplikasi internet dan terdistribusi java memeliki beberapa mekanisme keamanan untuk menjaga aplikasi agar tidak digunakan untuk merusak system computer yang menjalankan aplikasi program tersebut.</p>

<p><code>Arsitekstur Netral</code> Program java bersifat platform independent. Program cukup mempunyai satu buah porsi yang dapat dijalankan pada platform yang berbeda dengan JVM.</p>

<p><code>Portebel</code> Kodes sumber maupun program Java dapat dengan mudah dibawa keplatform yang berbeda – beda tanpa harus di kompilasi ulang.</p>

<p><code>Kinerja</code> Kinerja pada Java sering dikatakan kurang tinggi. Namun kinerja Java dapat ditingkatkan menggunkan kompilasi Java lain seperti buatas inprise, Microsoft, ataupun Symantec yang menggunakan Just in Time Compilers (JIT).</p>

<p><code>Multithreaded</code> Java mempunyai kemampuan untuk membuat suatu program yang dapat melakukan beberapa pekerjaan sekaligus dan simultan (Serentak).</p>

<p><code>Dinamis</code>
Java didesain untuk dapat dijalankan pada lingkungan yang dunamis. Perubahan pada suatu kelas (class) dengan menambahkan property ataupun method dapat dilakukan tanpa menggangu program yang menggunakan kelas tersebut.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fitur-Fitur Java]]></title>
    <link href="http://retrieved.github.io/blog/2014/07/21/fitur-fitur-java/"/>
    <updated>2014-07-21T19:33:45+08:00</updated>
    <id>http://retrieved.github.io/blog/2014/07/21/fitur-fitur-java</id>
    <content type="html"><![CDATA[<p>Java telah mengadopsi fitur-fitur dari bahasa lain yang dianggap memiliki kelebihan, sehingga menjadikannya sebagai bahasa yang  portable, efisien, tangguh dan sederhana. Berikut akan dijelaskan beberapa fitur Java yang membedakannya dengan pemograman  lainnya.</p>

<p><code>Java Virtual Machine (JVM)</code> JVM adalah sebuah mesin maya yang bekerja menyerupai aplikasi pada sebuah mesin nyata. JVM menyediakan spesifikasi peranti keras dan platform dimana konfilasi java terjadi. Spesifikasi inilah yang membuat aplikasi berbasis Java menjadi bebas platform mana pun karena proses kompilasi diselesaikan oleh JVM.
Aplikasi progam Java diciptakan dengan file teks berektensi . Java. Program ini dikompilasi menghasilkan satu berkas bytecode berekstensi .class atau lebih. Bytecode adalah serangkaian instruksi serupa instruksi kode mesin. Perbedaannya adalah kode mesin harus dijalankan pada system computer diman kompilasi ditujukan, sementara bytecode berjalan pada interpreter Java yang tersedia di semua platform system computer dan system operasi.</p>

<p><code>Garbage Collection</code> Garbage Collection adalah sebuah fasilltias pengelolaan memori secara dinamis yang dilakukan oleh bahasa pemograman, termasuk Java, Dengan fasilitisas ini seorang programmer tidak perlu mealokasikan memori sendiri sebagaimana pada pemograman C/C++.Hal ini berarti mengurangi kesalahan programmer, apabila ia lupa mengosongkan blok memori yang dipakai program, maka akan menjadikan penuh. Kondisi ini dikenal dengan Memory leaks.
(Dalam pengertian lain)
GC atau garbage collection adalah penghapusan object yang tidak terpakai secara otomatis.
Kapan GC terjadi : Gc terjadi ketika memori yang digunakan aplikasi melebihi dari batas memory yang ditentukan</p>

<p><code>Code security</code> Code security terimplementasi pada Java melalui penggunaan Java Runtime Evironment (JRE). Setelah Melewati proses Code Security, Barulah kode program java dijalankan. Java menggunakan model pengamanan 3 lapis untuk melindungi sistem dari untrusted Java Code.
<code>Class-Loader</code> menangani pemanggilan kelas Java ke interpreter runtime. Proses ini melakukan pemilihan kelas-kelas yang berasal dari disk local dengan kelas kelas yang berasal dari jaringan. Hal ini dapat melindungi system dari Torajan.
<code>Bytecode Verifer</code> menangani pembacaan bytecode sebelum dijalankan  dan memastikan bytecode memenuhi aturan-aturan bahasa java.
<code>Security Managament</code> menangani keamanan tingkat aplikasi dengan mengendalikan program yang berhak mengakses sumber daya seperti system file, port jaringan, proses eksternal, dan system windowing.</p>

<p><code>Java</code> juga menyediakan beragam teknik pengamanan lain yakni bahasa dirancang untuk mempersulit eksekusi kode perusak. Peniadaan pointer merupakan langkah besar pengamanan. Java tidak mengenal operasi pointer. Ditangan programmer andal, operasi pointer merupakan hal yang luar biasa untuk optimasi dan pembuatan program yang efisien serta mengagumkan. Namun mode ini dapat menjadi petaka di hadapan programmer jahat. Pointer merupakan sarana luas biasa untuk pengaksesan tak diotorisasi. Dengan peniadaan operasi pointer, Java dapat menjadi bahasa yang lebih aman.</p>

<p><code>Java</code> memiliki beberapa pengaman terhadap applet. Untuk mencegah program bertindak mengganggu media penyimpanan, maka applet tidak diperbolehkan melakukan open , read, ataupun write terhadap berkas secara sembarangan. Oleh karena Java applet dapat membuka jendela browser yang baru , maka jendela mempunyai logo java  dan teks identifikasi terhadap jendela yang dibuka. Hal ini mencegah jendela pop-up menipu sebagai permintaan keterangan nama pengguna dan kata sandi.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mengenal Java]]></title>
    <link href="http://retrieved.github.io/blog/2014/07/21/mengenal-java/"/>
    <updated>2014-07-21T08:58:06+08:00</updated>
    <id>http://retrieved.github.io/blog/2014/07/21/mengenal-java</id>
    <content type="html"><![CDATA[<p>Sebagai bahasa pemograman, Java tidak terlepas dari bahasa lain yang menjadi pendukungnya. Java mengambil fitur – fitur bahasa lain yang dianggap sebagai kelebihan oleh tim proyek Green. Bahasa – bahasa yang berjasa dalam perkembangan java tersebut antara lain :</p>

<p><code>Bahasa C++</code>
Bahasa ini paling berpengaruh terhadap Java, ini dikeranakan basis para tim adalah C++. Pada bahasa C++ diadopsi sintaks, sebagian semantic, dan exceptiop handling.<br></p>

<p><code>Bahasa Pascal</code>
Bahasa ini menyumbangkan prinsip mesin machine, sehingga Java dapat berjalan dalam berbgai platform. Mesin virtual sendiri merupakan rancangan Niklaus Wirth, pencipta Pascal.<br></p>

<p><code>Bahasa SIMULA</code>
Bahasa ini berkembang sekitar tahun 1965-an. Selain C++ bahasa SIMULA juga sangat mempengaruhi Java dalam hal bentukan-bentukan dasar dari pemograman berorientasi objek(OOP).<br></p>

<p><code>Bahasa LISP</code>
Fasilitas garbage Collection dan kemampuan untuk meniru generic list processing  (fasilitas ini jarang digunakan ) di adopsi dari bahasa LISP. Bahasa ini berkembang sekitar tahun 1955-an<br></p>

<p><code>Bahasa Algol</code>
Java meniru struktur kendali yang dimiliki oleh bahasa Algol. Bahasa ini berkembang sekitar tahun 1960-an.<br>
<code>Bahasa Ada</code>
Dari bahasa Ada, Java mengadopsi fitur strongly type dan Exception Handling.<br>
<code>Bahasa Objective C</code>
Dari bahasa ini diambil fasilitas antarmuka.<br></p>

<p><code>Bahasa SmallTalk</code>
Java meniru bahasa ST dalam hal pendekatan single-root class hierarchy (objek adalah satu kesatuan hierarki  pewarisan).<br></p>

<p><code>Bahasa Eiffel</code>
Fasilitas assertion yang dimiliki bahasa Eiffel diadopsi oleh Java dan mulai diterapkan pada sebagian JDK 1.4.<br></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sejarah Java]]></title>
    <link href="http://retrieved.github.io/blog/2014/07/21/sejarah-java/"/>
    <updated>2014-07-21T07:48:41+08:00</updated>
    <id>http://retrieved.github.io/blog/2014/07/21/sejarah-java</id>
    <content type="html"><![CDATA[<p>Java merupakan sebuah bahasa pemograman yang berkembang cukup pesat, Java meyediakan paket yang lengkap utuk melakukan pemograman dari pemograman desktop, pemograman internet, pemograman jaringan, hingga pemograman mobile. Selain itu, Java juga bersifat multiplatform sehingga dapat dijalankan pada semua platform sistem operasi. Java juga dapat diperoleh dengan mudah tanpa biaya hak cipta sepeser pun. Java lahir pada saat  penelitian yang dilakukan oleh sejumlah insinyur di Sun California pada tahun 1991. Mereka membuat proyek pembuatan bahasa pemograman yang dapat berjalan pada perangkat yang memilik memori ukuran kecil. Selain itu mereka juga menginginkan program dapat berjalan di platform manapun, ini dikarenakan setiap perangkat mempunyai manufaktur yang berbeda. Pada mulanya, mereka menamakan proyek ini dengan nama “Green Project.” Dalam proyek penelitiannya, proyek Green berhasil menciptakan star 7 (*7), sebuah peranti lunak yang dapat digunakan untuk berkomunikasi jarak jauh yang sangat cerdas . star 7 dibuat dengan basis bahasa C dan C++. Setelah beberapa lama, James Gosling, salah satu pimpinan tim merasa kedua bahasa ini mempunyai kekurangan, sehingga mereka sepakat mengembangkan bahasa baru. Bahasa yang mereka kembangkan ini diberi nama OAK, terinspirasi ketika James Gosling melihat pohon oak di seberang kantornya. Oleh karena Oak telah menjadi hak cipta bahasa lainnya, maka mereka mengubah namanya menjadi Java. Penamaan Java sendiri terinspirasi ketika para tim minum kopi di sebuah kedai kopi di dekat kantor mereka. Salah seorang tim berbicara tentang asal muasal biji kopi yang mereka  minum yaitu dari Java (Pulau Jawa). Kemudian para tim sepakat menamakan bahasa itu  Java dengan logo secangkir kopi panas. Setelah mereka berhasil menciptakan Star 7, ternyata pangsa pasar belum begitu tertarik, sehingga mereka mencari pangsa pasar lain yaitu pemograman Internet. Mereka mengarahkan penelitian ke pengembangan Internet karena Java memiliki karekteristik yang cocok untuk mengembangkan Internet yaitu mempunyai ukuran kecil, efisien, dan portable. Pada saat yang sama perkembangan Internet begitu pesat, sehingga Java dalam waktu tidak lama telah menjadi popular di kalangan para pengembang web, Setelah mereka sukses dengan pemograman Internet, kemudian mereka mengembangkan Java ke pemograman desktop, mobile klien server (Jaringan), dan lainnya.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress + github page di ubuntu]]></title>
    <link href="http://retrieved.github.io/blog/2014/07/21/hello-world/"/>
    <updated>2014-07-21T04:38:39+08:00</updated>
    <id>http://retrieved.github.io/blog/2014/07/21/hello-world</id>
    <content type="html"><![CDATA[<p>Octopress adalah platform blogging yang &ldquo;wow&rdquo; direkomendasikan kepada siapapun yang tidak keberatan melakukan pekerjaan dengan sedikit codingan, tetapi dibalik semua itu anda akan belajar beberapa keterampilan baru yang kren misal nya, belajar apa itu version control system dengan <a href="http://git-scm.com/book/en/Getting-Started-About-Version-Control" target="_blank" style="text-decoration:none">GIT</a> dan pastinya memiliki blog yang keren.<blockquote>sudah banyak tutorial yang mendetail tentang cara membuat blog dengan octopress. situs resmi octopress memiliki dokumentasi yang mendetail, dan pada tutorial ini mecoba menuliskan kembali langkah &ndash; langkah setup octopress di ubuntu. ok langsung saja Let’s get started!!</blockquote>
Berikut langkah-langkah dan persiapan set-up octopress:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>install git
</span><span class='line'>buat repository di github
</span><span class='line'>install ruby (pada tutorial ini installasi ruby menggunakan rvm)
</span><span class='line'>clone octopress github repository (master branch)
</span><span class='line'>install tema default octopress
</span><span class='line'>configurasi octopress untuk halam github deploy
</span><span class='line'>generate, commit dan push blog anda di repository github(master branch)
</span><span class='line'>buat post pertama anda</span></code></pre></td></tr></table></div></figure>


<h5>Install Git</h5>


<p>buka terminal pada ubuntu anda dengan menekan CTRL + ALT + T, dan ketikkan perintah ini :</p>

<figure class='code'><figcaption><span>Install Git </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo add-apt-repository ppa:git-core/ppa
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install git-core</span></code></pre></td></tr></table></div></figure>


<p>untuk melihat versi git ketikkan perintah berikut setelah intalasi selesai</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git --version</span></code></pre></td></tr></table></div></figure>


<h5>Membuat account github baru dan sebuah halam github repository</h5>


<p>Default penamaan konvensi untuk halaman repositori Github adalah {username}.github.io&hellip; Anda dapat mengakses halaman situs Github anda (HTML statis hanya) melalui URL berikut <a href="http://">http://</a> {username} github.io.
Halaman Github dasarnya memungkinkan Anda untuk meng-host situs HTML statis langsung di Github.</p>

<!-- more -->


<h5>Install RVM</h5>


<p>Sebelum kita melakukan installasi, kita harus menjalankan update untuk memastikan bahwa semua paket yang kita download ke VPS up to date:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get update</span></code></pre></td></tr></table></div></figure>


<p>Setelah itu selesai, kita bisa mulai menginstal RVM, Manager Ruby Version. Ini adalah program besar yang memungkinkan Anda menggunakan beberapa versi Ruby pada satu server; Namun, dalam kasus ini, kita hanya akan menggunakannya untuk menginstal versi terbaru dari Ruby.jika di ubuntu anda belum terinstall curl maka lakukan langkah berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install curl</span></code></pre></td></tr></table></div></figure>


<p>setelah itu kita akan mengintall RVM yang nanti digunakan untuk menginstall ruby</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\curl -L https://get.rvm.io | bash -s stable
</span><span class='line'>source ~/.rvm/scripts/rvm</span></code></pre></td></tr></table></div></figure>


<p>setelah installasi selesai, kita perlu menginstall beberapa depedancies secara atomatis dengan menuliskan kode berikut pada terminal anda:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm requirements</span></code></pre></td></tr></table></div></figure>


<h5>install ruby</h5>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm install ruby</span></code></pre></td></tr></table></div></figure>


<p>sekarang ruby dengan versi terakhir telah terinstall, Namun, karena kita diakses melalui sebuah program yang memiliki berbagai versi Ruby, kita perlu memberitahu sistem untuk menggunakan versi kita hanya diinstal secara default.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm use ruby --default</span></code></pre></td></tr></table></div></figure>


<p>untuk memastikan installasi berhasil, ketikan perintah berikut untuk mengetahui versi ruby yang kita gunakan</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby --version</span></code></pre></td></tr></table></div></figure>


<h5>Install RubyGems</h5>


<p>Langkah berikutnya memastikan bahwa kita memiliki semua komponen yang diperlukan dari Ruby. Kita dapat terus menggunakan RVM untuk menginstal gems; ketik baris ini ke dalam terminal.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm rubygems current
</span><span class='line'>gem --version</span></code></pre></td></tr></table></div></figure>


<h5>Clone halaman github repository octopress (master branch)</h5>


<p>pada langkah ini Anda akan  mengkloning master barach dari repositori github Octopress resmi. Saya pikir sangat penting untuk dicatat bahwa lokasi di mana Anda clone repositori ini akan berfungsi sebagai direktori  repositori untuk blog Anda. Karena itu, saya sarankan penamaan direktori yang sama seperti repositori Github Pages Anda, misalnya ubuntu.github.io.</p>

<figure class='code'><figcaption><span>Clone halaman github repository octopress </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd &lt;MAIN_GIT_DIR> // e.g. `cd /home/ubuntu/githome`
</span><span class='line'>git clone https://github.com/imathis/octopress.git {USERNAME}.github.io
</span><span class='line'>//`e.g. clones repo to  /home/ubuntu/githome/ubuntu.github.io`</span></code></pre></td></tr></table></div></figure>


<blockquote>
catatan : pada bagian git ini mungkin ada sedikit keluhan jika Anda belum setup email global dan / atau nama pengguna. Jika itu terjadi, jalankan perintah yang diperlukan dan coba lagi.
</blockquote>


<h5>Install bundler</h5>


<p>Sekarang Anda telah mengkloning repositori Octopress, Anda harus menginstal  ruby gems ​ tambahan yang dibutuhkan Octopress.</p>

<p>Octopress source  memiliki sebuah file bernama <code>Gemfile</code>. File ini berisi daftar semua <code>ruby</code> <code>gems</code> ​​yang diperlukan, dan bundler akan melihat file ini dan secara otomatis mengambil <code>ruby</code> <code>gems</code> ​​yang diperlukan untuk Anda.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<h5>Install default theme</h5>


<p>Pada bagian ini Anda siap untuk menginstal default tema Octopress. Untuk melakukan ini, Anda akan menggunakan perintah <code>rake</code>. The Octopress sumber berisi sebuah file bernama <code>Rakefile</code> yang mendefinisikan berbagai <code>rake</code> target (script) yang dapat dieksekusi melalui perintah <code>rake</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h5>Konfigurasi Octopress pada halaman github deployment</h5>


<p>Octopress memiliki script <code>rake</code> yang secara otomatis mengkonfigurasi repositori yang baru Anda kloning untuk deployment Github Pages. Script itu sendiri hanya memerlukan input minimal, tetapi penting untuk benar-benar memahami bagaimana menggunakannya.</p>

<p>Script ini telah diperbarui sejak Octopress 2.0 untuk mendukung bekerja dengan Github melalui HTTPS bukan pendekatan SSH yang lebih tradisional. Saya pribadi lebih suka pendekatan ini, karena Anda tidak perlu khawatir tentang menghasilkan kunci SSH.</p>

<p>Github sekarang merekomendasikan menggunakan HTTPS bukan SSH. <a href="https://github.com/blog/642-smart-http-support" target="_blank" style="text-decoration:none">klik disini</a> untuk lebih jelasnya.</p>

<p>Agar Octopress benar-benar mendukung HTTPS, ketika <code>rake</code> meminta Anda untuk memasukkan URL repositori Github, pastikan Anda menggunakan HTTPS untuk URL repositori (misalnya <code>https://github.com/ubuntu/ubuntu.github.io.git</code>) . Untuk referensi, URL SSH adalah: <code>git@github.com: ubuntu / ubuntu.github.io.git</code>. Jika Anda tertarik untuk bekerja dengan URL SSH, <a href="https://help.github.com/articles/generating-ssh-keys" target="_blank" style="text-decoration:none">klik disini</a> untuk lebih jelasnya..</p>

<p>beberapa hal penting dari perintah script itu:</p>

<ol>
<li>mengganti nama asal octopress (origin remote octopress), ini akan membiarkan anda meperbarui octopress melalui remote octopress.</li>
<li>menambahkan ke halaman github repo anda sebagai default origin remote</li>
<li>perubahan branch aktif dari master ke source. Ini berarti bahwa root directory repositori sekarang akan dikaitkan dengan source branch dalam halaman github repositori Anda.</li>
<li>Ini akan mengkonfigurasi URL standar blog Anda berdasarkan pada URL repositori Github Pages (misalnya http://ubuntu.github.io)</li>
<li>menciptakan sebuah direktori baru bernama _deploy pada direktori repositori root anda. Direktori ini akan berisi kode yang berhubungan dengan master branch repositori Anda.</li>
</ol>


<p>Satu hal penting yang perlu diperhatikan: direktori <code>_deploy</code>, yang sesuai dengan <code>master branch</code> dari halaman repositori Github, adalah di mana HTML dikompilasi dan ditempatkan. <code>master branch</code> berisi HTML yang akan disajikan kepada pengguna browser web ketika mengarahkan ke blog Anda.</p>

<p><code>source</code> branch (yang juga kebetulan direktori repositori root anda misalnya /home/user/githome/ubuntu.github.io berisi <code>markdown</code> , <code>SASS</code>, <code>JavaScript</code> yang dikompilasi melalui Jekyll ke HTML.<br>
Anda harus memastikan bahwa semuanya telah diatur dengan benar dengan menjalankan perintah berikut:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#di root repo directory anda
</span><span class='line'>git remote -v
</span><span class='line'># hasil output remotes anda, :
</span><span class='line'>#octopress https://github.com/imathis/octopress.git (fetch)
</span><span class='line'>#octopress https://github.com/imathis/octopress.git (push)
</span><span class='line'>#origin https://github.com/ubuntu/ubuntu.github.io.git (fetch)
</span><span class='line'>#origin https://github.com/ubuntu/ubuntu.github.io.git (push)
</span><span class='line'>git branch -a #mengkonfirmasi bahwa dir root repo menunjuk ke `source` branch
</span><span class='line'># source
</span><span class='line'>cd deploy
</span><span class='line'>git branch -a #mengkonfirmasi bahwa dir deploy menunjuk ke `master` branch
</span><span class='line'># master
</span><span class='line'>cd\ #kembali ke root direktori anda</span></code></pre></td></tr></table></div></figure>


<h5>Generate, commit, dan push blog anda ke Github (master branch)</h5>


<p>Pada poin ini Anda dapat meng<code>generate</code> HTML anda, mem<code>preview</code>, dan melakukan <code>commit</code> untuk Github anda. Ada berbagai script <code>rake</code> yang dapat digunakan untuk melakukan tugas-tugas ini:</p>

<ul>
<li><em>rake generate</em> : ini akan mengkompilasi segala sesuatu di <em>{root REPO direktori DIR> / source}</em> (<em>markdown, SASS,</em> dan <em>JavaScript</em>) dan menempatkan HTML yang dihasilkan ke dalam <em>{root REPO DIR> / folder publik}</em>.</li>
<li><em>rake preview</em> : ini akan menjalankan server web lokal (pada port 4000), yang akan membantu Anda melihat blog Anda secara lokal. Ini akan mendeteksi perubahan pada <em>markdown</em>, sehingga Anda bisa me refresh blog setelah melakukan perubahan <em>markdown</em> dan melihat kembali hasil perubahan itu.</li>
<li><em>rake deploy</em> :  Ini akan menyalin semua HTML yang dihasilkan dari <em>{root REPO DIR/public}</em> untuk <em>{root REPO DIR> / _deploy}</em> dan <em>commit</em> kemudian <em>push</em> kode di <em>{root REPO DIR / _deploy}</em> ke <em>master branch</em> repositori halaman Github  Anda.</li>
</ul>


<p>Jadi silakan <code>generate</code> dan <code>push</code> <code>master</code> branch blog Anda ke Github.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake deploy
</span><span class='line'># Catatan: Anda harus mengisikan username dan password Github anda</span></code></pre></td></tr></table></div></figure>


<h5>Commit dan push source files anda ke github (source branch)</h5>


<p>Tidak ada skrip <code>rake</code> untuk melakukan <code>source</code> branch Anda, sehingga Anda harus melakukannya dengan menggunakan <code>git</code>.</p>

<p>Melakukan <code>source</code> branch sangat penting, karena berfungsi sebagai dasar untuk HTML yang akan dihasilkan.</p>

<p>Pastikan Anda dalam direktori root untuk repositori Anda (lokal) ketika menjalankan perintah ini.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m "initial commit for source files"
</span><span class='line'>git push origin source
</span><span class='line'>#NOTE: itu sangat penting untuk melakukan push dan commit ke source branch anda</span></code></pre></td></tr></table></div></figure>


<h5>Buat postingan di blog pertama anda</h5>


<p>untuk memastikan bahwa blog Octopress Anda bekerja dengan benar, saya sarankan membuat posting blog awal. Anda selalu dapat menghapus postingan ini nanti.
Untuk melakukan ini, Anda akan menjalankan <code>rake new_post ['Judul posting blog']</code> .</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post['Hello World']
</span><span class='line'># membuat source/_posts/2011-08-01-hello-world.markdown</span></code></pre></td></tr></table></div></figure>


<p>Ini akan membuat file baru <code>markdown</code> di direktori <code>&lt;root REPO DIR&gt; / source / _posts</code>. Nama file <code>markdown</code> akan didasarkan dari judul yang Anda berikan dalam naskah <code>rake</code>. Nama ini juga akan berfungsi sebagai dasar untuk permalink Anda dengan posting blog.</p>

<p>Anda kemudian dapat pergi ke <code>&lt;root REPO DIR&gt; / source / _posts</code> dan mengedit file <code>markdown</code> yang baru dibuat. Saya merekomendasikan untuk menggunakan program seperti <code>MarkdownPad 2</code> untuk os window dan <code>gedit</code> pada ubuntu untuk melakukan pengeditan post anda.</p>

<p>Setiap file <code>markdown</code> akan memiliki YAML &ldquo;header&rdquo; dengan beberapa Octopress info spesifik yang akan digunakan ketika kompilasi <code>markdown</code> ke HTML.
untuk lebih detail nya silahkan kunjungi doc octopress <a href="http://octopress.org/docs/blogging/" target="_blank" style="text-decoration:none">di sini</a></p>

<br>


<p>Di bawah header, Anda akan menambahkan <code>markdown</code> untuk postingan blog Anda. Setelah mengedit dan menyimpan file <code>markdown</code>, Anda mungkin ingin melihat itu, dan kemudian jika Anda senang dengan hal itu, commit dan push ke <code>master</code> branch repositori halaman github anda.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake preview
</span><span class='line'># buka di tab baru dengan mengunjungi link ini > http://localhost:4000
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p>Dan ingat untuk selalu commit <code>source</code> branch halaman github repository anda.dan menyimpan file <code>markdown</code>,</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#make sure your in the &lt;ROOT REPO DIR>
</span><span class='line'>git add .
</span><span class='line'>git commit -m "added first blog post"
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<p>Jika Anda ingin menghapus postingan blog Anda, anda dapat menghapus file <code>markdown</code>. Dari <code>&lt;root REPO DIR&gt; / source / _posts</code>. Setelah memastikan sudah melakukan <code>rake generate</code> dan <code>rake deploy</code>.</p>

<br>


<br>


<p><strong>Daftar Pustaka</strong>&hellip; :D<br>
<a href="http://robstrube.com/blog/2013/07/30/octopress-plus-github-pages-on-windows-tutorial/">http://robstrube.com/blog/2013/07/30/octopress-plus-github-pages-on-windows-tutorial/</a></p>
]]></content>
  </entry>
  
</feed>
